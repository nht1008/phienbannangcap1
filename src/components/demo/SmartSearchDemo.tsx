"use client";

import React, { useState } from 'react';
import { SmartSearchBar, SearchHighlight } from '@/components/shared/SmartSearchBar';
import { useDebtSearch, useCustomerSearch, useInvoiceSearch } from '@/hooks/use-smart-search';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

// Sample data for demo
const sampleDebts = [
  { id: '1', customerName: 'Nguy·ªÖn VƒÉn An', status: 'C√≤n n·ª£', remainingAmount: 500000, date: '2024-01-15', originalAmount: 1000000, amountPaid: 500000 },
  { id: '2', customerName: 'Tr·∫ßn Th·ªã B√¨nh', status: 'ƒê√£ thanh to√°n', remainingAmount: 0, date: '2024-02-20', originalAmount: 750000, amountPaid: 750000 },
  { id: '3', customerName: 'L√™ Ho√†ng C∆∞·ªùng', status: 'Qu√° h·∫°n', remainingAmount: 1200000, date: '2023-12-10', originalAmount: 1200000, amountPaid: 0 }
];

const sampleCustomers = [
  { id: '1', name: 'Nguy·ªÖn VƒÉn An', phone: '0901234567', email: 'an@email.com', address: 'H√† N·ªôi', tier: 'V√†ng' },
  { id: '2', name: 'Tr·∫ßn Th·ªã B√¨nh', phone: '0912345678', email: 'binh@email.com', address: 'H·ªì Ch√≠ Minh', tier: 'B·∫°c' },
  { id: '3', name: 'L√™ Ho√†ng C∆∞·ªùng', phone: '0923456789', email: 'cuong@email.com', address: 'ƒê√† N·∫µng', tier: 'ƒê·ªìng' }
];

const sampleInvoices = [
  { id: 'HD001', customerName: 'Nguy·ªÖn VƒÉn An', total: 1500000, date: '2024-07-10', paymentMethod: 'Ti·ªÅn m·∫∑t', employeeName: 'Admin' },
  { id: 'HD002', customerName: 'Tr·∫ßn Th·ªã B√¨nh', total: 2000000, date: '2024-07-11', paymentMethod: 'Chuy·ªÉn kho·∫£n', employeeName: 'Admin' },
  { id: 'HD003', customerName: 'L√™ Ho√†ng C∆∞·ªùng', total: 750000, date: '2024-07-12', paymentMethod: 'Th·∫ª', employeeName: 'Admin' }
];

function DebtSearchDemo() {
  const {
    searchQuery,
    setSearchQuery,
    clearSearch,
    filteredResults,
    isSearching,
    totalResults
  } = useDebtSearch(sampleDebts);

  const suggestions = ['Nguy·ªÖn VƒÉn An', 'C√≤n n·ª£', 'ƒê√£ thanh to√°n'];

  return (
    <div className="space-y-4">
      <SmartSearchBar
        placeholder="T√¨m ki·∫øm c√¥ng n·ª£ theo t√™n kh√°ch h√†ng, tr·∫°ng th√°i..."
        searchQuery={searchQuery}
        onSearchChange={setSearchQuery}
        onClearSearch={clearSearch}
        isSearching={isSearching}
        totalResults={totalResults}
        suggestions={suggestions}
      />
      
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>STT</TableHead>
            <TableHead>Kh√°ch h√†ng</TableHead>
            <TableHead>Tr·∫°ng th√°i</TableHead>
            <TableHead>C√≤n l·∫°i</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {filteredResults.map((result, index) => (
            <TableRow key={result.item.id}>
              <TableCell>{index + 1}</TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.customerName} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.status} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>{result.item.remainingAmount.toLocaleString('vi-VN')} VNƒê</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  );
}

function CustomerSearchDemo() {
  const {
    searchQuery,
    setSearchQuery,
    clearSearch,
    filteredResults,
    isSearching,
    totalResults
  } = useCustomerSearch(sampleCustomers);

  const suggestions = ['Nguy·ªÖn VƒÉn An', 'H√† N·ªôi', 'V√†ng'];

  return (
    <div className="space-y-4">
      <SmartSearchBar
        placeholder="T√¨m ki·∫øm kh√°ch h√†ng theo t√™n, SƒêT, email..."
        searchQuery={searchQuery}
        onSearchChange={setSearchQuery}
        onClearSearch={clearSearch}
        isSearching={isSearching}
        totalResults={totalResults}
        suggestions={suggestions}
      />
      
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>STT</TableHead>
            <TableHead>T√™n</TableHead>
            <TableHead>SƒêT</TableHead>
            <TableHead>Email</TableHead>
            <TableHead>ƒê·ªãa ch·ªâ</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {filteredResults.map((result, index) => (
            <TableRow key={result.item.id}>
              <TableCell>{index + 1}</TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.name} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.phone} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.email} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.address} 
                  searchQuery={searchQuery}
                />
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  );
}

function InvoiceSearchDemo() {
  const {
    searchQuery,
    setSearchQuery,
    clearSearch,
    filteredResults,
    isSearching,
    totalResults
  } = useInvoiceSearch(sampleInvoices);

  const suggestions = ['Nguy·ªÖn VƒÉn An', 'Ti·ªÅn m·∫∑t', 'HD001'];

  return (
    <div className="space-y-4">
      <SmartSearchBar
        placeholder="T√¨m ki·∫øm h√≥a ƒë∆°n theo m√£, kh√°ch h√†ng, nh√¢n vi√™n..."
        searchQuery={searchQuery}
        onSearchChange={setSearchQuery}
        onClearSearch={clearSearch}
        isSearching={isSearching}
        totalResults={totalResults}
        suggestions={suggestions}
      />
      
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>M√£ Hƒê</TableHead>
            <TableHead>Kh√°ch h√†ng</TableHead>
            <TableHead>T·ªïng ti·ªÅn</TableHead>
            <TableHead>Thanh to√°n</TableHead>
            <TableHead>Nh√¢n vi√™n</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {filteredResults.map((result, index) => (
            <TableRow key={result.item.id}>
              <TableCell>
                <SearchHighlight 
                  text={result.item.id} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.customerName} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>{result.item.total.toLocaleString('vi-VN')} VNƒê</TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.paymentMethod} 
                  searchQuery={searchQuery}
                />
              </TableCell>
              <TableCell>
                <SearchHighlight 
                  text={result.item.employeeName} 
                  searchQuery={searchQuery}
                />
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  );
}

export default function SmartSearchDemo() {
  return (
    <Card className="w-full max-w-6xl mx-auto">
      <CardHeader>
        <CardTitle className="text-2xl font-bold text-center">
          üîç Demo T√¨m ki·∫øm Th√¥ng minh
        </CardTitle>
        <p className="text-center text-muted-foreground">
          Th·ª≠ nghi·ªám t√≠nh nƒÉng t√¨m ki·∫øm cho C√¥ng n·ª£, Kh√°ch h√†ng v√† H√≥a ƒë∆°n
        </p>
      </CardHeader>
      <CardContent>
        <Tabs defaultValue="debt" className="w-full">
          <TabsList className="grid w-full grid-cols-3">
            <TabsTrigger value="debt">C√¥ng n·ª£</TabsTrigger>
            <TabsTrigger value="customer">Kh√°ch h√†ng</TabsTrigger>
            <TabsTrigger value="invoice">H√≥a ƒë∆°n</TabsTrigger>
          </TabsList>
          
          <TabsContent value="debt" className="mt-4">
            <h3 className="text-lg font-semibold mb-4">T√¨m ki·∫øm C√¥ng n·ª£</h3>
            <DebtSearchDemo />
          </TabsContent>
          
          <TabsContent value="customer" className="mt-4">
            <h3 className="text-lg font-semibold mb-4">T√¨m ki·∫øm Kh√°ch h√†ng</h3>
            <CustomerSearchDemo />
          </TabsContent>
          
          <TabsContent value="invoice" className="mt-4">
            <h3 className="text-lg font-semibold mb-4">T√¨m ki·∫øm H√≥a ƒë∆°n</h3>
            <InvoiceSearchDemo />
          </TabsContent>
        </Tabs>
        
        <div className="mt-8 p-4 bg-muted rounded-lg">
          <h4 className="font-semibold mb-2">üí° H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</h4>
          <ul className="text-sm space-y-1 text-muted-foreground">
            <li>‚Ä¢ G√µ t√™n kh√°ch h√†ng, tr·∫°ng th√°i, ho·∫∑c b·∫•t k·ª≥ th√¥ng tin n√†o ƒë·ªÉ t√¨m ki·∫øm</li>
            <li>‚Ä¢ T√¨m ki·∫øm h·ªó tr·ª£ ti·∫øng Vi·ªát c√≥ d·∫•u v√† kh√¥ng d·∫•u</li>
            <li>‚Ä¢ Click v√†o thanh t√¨m ki·∫øm ƒë·ªÉ xem g·ª£i √Ω</li>
            <li>‚Ä¢ T·ª´ kh√≥a t√¨m ƒë∆∞·ª£c s·∫Ω ƒë∆∞·ª£c l√†m n·ªïi b·∫≠t m√†u v√†ng</li>
            <li>‚Ä¢ Th·ª≠ t√¨m ki·∫øm m·ªù: g√µ "Nguyen" thay v√¨ "Nguy·ªÖn"</li>
          </ul>
        </div>
      </CardContent>
    </Card>
  );
}
